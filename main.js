let graphBlock = document.querySelector('.graph')
let textarea = document.querySelector('textarea')

for (let i = 0; i < 106*17; i++) {
	graphBlock.innerHTML += '<div class="cell"></div>'
}

let cells = document.getElementsByClassName('cell')

let tupper = (x, y) => {
	let n = Math.pow(2, Number(BigInt(-17 * x) - (y % 17n)))
	if (n >= 1) {
		return 1n == (((y / 17n) * BigInt(n)) % 2n)
	}
	n = 1n
	for (let i = 0; i < Number(BigInt(-17 * x) - (y % 17n)) * -1; i++) {
		n *= 2n
	}
	return 1n == (((y / 17n) / n) % 2n)
}

let printGraph = (k) => {
	for (let i = 0; i < 106*17; i++) {
		cells[i].classList.remove('black')
	}

	for (let i = 0; i < 106*17; i++) {
		let x = i % 106
		let y = Math.floor(i/106)
		let dy = BigInt(y) + k
		if (tupper(x, dy)) {
			y = 16 - y
			cells[x + y*106].classList.add('black')
		}
	}
}

printGraph(BigInt(textarea.value))

let buttons = document.getElementsByClassName('button')

for (let i = 0; i < buttons.length; i++) {
	buttons[i].addEventListener('click', () => {
		if (i == 0) {
			printGraph(BigInt(textarea.value))
		}
		if (i == 1) {
			textarea.value = BigInt(textarea.value) + 17n
			printGraph(BigInt(textarea.value))
		}
		if (i == 2) {
			textarea.value = BigInt(textarea.value) - 17n
			if (BigInt(textarea.value) < 0n) {textarea.value = '0'}
			printGraph(BigInt(textarea.value))
		}
	})
}

document.addEventListener('keydown', (e) => {
    if (e.key == 'Enter') {
        printGraph(BigInt(textarea.value))
    }
})

let copyLinks = document.getElementsByClassName('copy')
let values = [
	'4858450636189713423582095962494202044581400587983244549483093085061934704708809928450644769865524364849997247024915119110411605739177407856919754326571855442057210445735883681829823754139634338225199452191651284348332905131193199953502413758765239264874613394906870130562295813219481113685339535565290850023875092856892694555974281546386510730049106723058933586052544096664351265349363643957125565695936815184334857605266940161251266951421550539554519153785457525756590740540157929001765967965480064427829131488548259914721248506352686630476300',
	'11446143048577322873420746886032253602081036176820637725351572728824205319356548595443573778191478330600315648025516347418384227839098139252614970555108049338384907856705947495396329029490965408180552069582726103040',
	'2352035939949658122140829649197960929306974813625028263292934781954073595495544614140648457342461564887325223455620804204796011434955111022376601635853210476633318991990462192687999109308209472315419713652238185967518731354596984676698288025582563654632501009155760415054499960',
	'144520248970897582847942537337194567481277782215150702479718813968549088735682987348888251320905766438178883231976923440016667764749242125128995265907053708020473915320841631792025549005418004768657201699730466383394901601374319715520996181145249781945019068359500510657804325640801197867556863142280259694206254096081665642417367403946384170774537427319606443899923010379398938675025786929455234476319291860957618345432248004921728033349419816206749854472038193939738513848960476759782673313437697051994580681869819330446336774047268864',
	'4858487703217654168507377107565676789145697178497253677539145554670922017857085213413173633854495047282086563744595668052759488386996770837664164969196091973203371306069246930777888377675560041790406433986426120222100340839317306765808959348091572782702686368719805021316388634593943170765425605584330546425152011857580345430213350000780210873203801334201175502361683069729922284812049873413010363062655473832644706256174025318297754509380470833293009879761976920405133351570489777814210982577372387886569607168274836745964803078428404756774895',
]

for (let i = 0; i < copyLinks.length; i++) {
	copyLinks[i].addEventListener('click', () => {
		let inp = document.createElement('input')
		inp.value = values[i]
		document.body.appendChild(inp)
		inp.select()
		document.execCommand('copy')
		document.body.removeChild(inp)
	})
}